<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:aop="http://www.springframework.org/schema/aop"   
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd 
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd">

	<description> </description>
	
	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
	<context:component-scan base-package="com.smartdp" />
	
	<!-- 泛型hibernateDAO 
	<bean id="baseDao" class="com.smartdp.core.dao.impl.BaseDaoSupport">
		<property name="sessionFactory" ref="sessionFactory"/>
		<property name="jdbcTemplate" ref="jdbcTemplate"/>
	</bean>	
	-->
	
	<!-- 基础服务类 
	<bean id="baseService" class="com.smartdp.core.service.impl.BaseServiceImpl">
		<property name="baseDao" ref="baseDao" />
	</bean>	
	-->
	
	<bean class="com.smartdp.core.utils.SpringContextHolder" />
	<bean class="com.smartdp.core.utils.ServletContextHolder" />
	
	<!-- 读取系统properties配置文件 -->
	<bean class="com.smartdp.core.config.PropertyConfigurer"></bean> 
	
	<!-- 
	 <jdbc:initialize-database data-source="dataSource" enabled="true" ignore-failures="ALL">
        <jdbc:script location="classpath*:init-*.sql"/>
    </jdbc:initialize-database>
	 -->
	 
	<!-- idbc配置文件-->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath*:/jdbc.properties</value>
			</list>
		</property>
	</bean>
	 
	 
	<!-- 数据源配置,使用应用内的DBCP数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<!-- Connection Info -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		
		<property value="1000" name="maxWait" />
		<property value="5" name="initialSize" />
		<property value="20" name="maxActive" />
		<property value="5" name="maxIdle" />
		<property value="true" name="testWhileIdle" />
		<property value="15000" name="timeBetweenEvictionRunsMillis" />
		<property value="20" name="numTestsPerEvictionRun" />
		<property value="SELECT 1 FROM DUAL" name="validationQuery" />
		<property value="true" name="removeAbandoned" />
		<property value="180" name="removeAbandonedTimeout" />

		<!-- Connection Pooling Info 
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="defaultAutoCommit" value="${jdbc.defaultAutoCommit}" />
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
		-->
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

	<!-- Hibernate SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动保存创建人和创建时间等信息 -->
		<property name="entityInterceptor" ref="hiberAspect"/>
		
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path">${hibernate.cache.provider_configuration_file_resource_path}</prop>
			</props>
		</property>
		<property name="packagesToScan" value="com.smartdp.*.model" />
	</bean>
	
	<!-- 
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path">${hibernate.cache.provider_configuration_file_resource_path}</prop>
			</props>
		</property>
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath:/com/smartdp/*/model</value>
			</list>
		</property>
	</bean>
	 -->
	
	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED" />
        </tx:attributes>
    </tx:advice>

	<aop:config>
        <aop:pointcut id="interceptorPointCuts"
            expression="execution(* com.smartdp.*.service.impl.*.*(..)) or execution(* com.smartdp.*.service..*.*(..))" />
        <aop:advisor advice-ref="txAdvice"
            pointcut-ref="interceptorPointCuts" />        
    </aop:config> 
    <import resource="classpath:applicationContext-*.xml"/>
</beans>